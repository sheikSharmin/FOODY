// Generated by view binder compiler. Do not edit!
package com.michael.foody.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.michael.foody.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class IngredientsRowLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView ingredientAmount;

  @NonNull
  public final ConstraintLayout ingredientBackground;

  @NonNull
  public final TextView ingredientConsistency;

  @NonNull
  public final ImageView ingredientImageView;

  @NonNull
  public final TextView ingredientName;

  @NonNull
  public final TextView ingredientOriginal;

  @NonNull
  public final TextView ingredientUnit;

  @NonNull
  public final MaterialCardView ingredientsCardView;

  @NonNull
  public final View whiteBackground;

  private IngredientsRowLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView ingredientAmount, @NonNull ConstraintLayout ingredientBackground,
      @NonNull TextView ingredientConsistency, @NonNull ImageView ingredientImageView,
      @NonNull TextView ingredientName, @NonNull TextView ingredientOriginal,
      @NonNull TextView ingredientUnit, @NonNull MaterialCardView ingredientsCardView,
      @NonNull View whiteBackground) {
    this.rootView = rootView;
    this.ingredientAmount = ingredientAmount;
    this.ingredientBackground = ingredientBackground;
    this.ingredientConsistency = ingredientConsistency;
    this.ingredientImageView = ingredientImageView;
    this.ingredientName = ingredientName;
    this.ingredientOriginal = ingredientOriginal;
    this.ingredientUnit = ingredientUnit;
    this.ingredientsCardView = ingredientsCardView;
    this.whiteBackground = whiteBackground;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static IngredientsRowLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static IngredientsRowLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.ingredients_row_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static IngredientsRowLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ingredient_amount;
      TextView ingredientAmount = ViewBindings.findChildViewById(rootView, id);
      if (ingredientAmount == null) {
        break missingId;
      }

      id = R.id.ingredient_background;
      ConstraintLayout ingredientBackground = ViewBindings.findChildViewById(rootView, id);
      if (ingredientBackground == null) {
        break missingId;
      }

      id = R.id.ingredient_consistency;
      TextView ingredientConsistency = ViewBindings.findChildViewById(rootView, id);
      if (ingredientConsistency == null) {
        break missingId;
      }

      id = R.id.ingredient_imageView;
      ImageView ingredientImageView = ViewBindings.findChildViewById(rootView, id);
      if (ingredientImageView == null) {
        break missingId;
      }

      id = R.id.ingredient_name;
      TextView ingredientName = ViewBindings.findChildViewById(rootView, id);
      if (ingredientName == null) {
        break missingId;
      }

      id = R.id.ingredient_original;
      TextView ingredientOriginal = ViewBindings.findChildViewById(rootView, id);
      if (ingredientOriginal == null) {
        break missingId;
      }

      id = R.id.ingredient_unit;
      TextView ingredientUnit = ViewBindings.findChildViewById(rootView, id);
      if (ingredientUnit == null) {
        break missingId;
      }

      id = R.id.ingredients_cardView;
      MaterialCardView ingredientsCardView = ViewBindings.findChildViewById(rootView, id);
      if (ingredientsCardView == null) {
        break missingId;
      }

      id = R.id.white_background;
      View whiteBackground = ViewBindings.findChildViewById(rootView, id);
      if (whiteBackground == null) {
        break missingId;
      }

      return new IngredientsRowLayoutBinding((ConstraintLayout) rootView, ingredientAmount,
          ingredientBackground, ingredientConsistency, ingredientImageView, ingredientName,
          ingredientOriginal, ingredientUnit, ingredientsCardView, whiteBackground);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
